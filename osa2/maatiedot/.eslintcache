[{"/Users/arttupennanen/Desktop/projects/fullstackopen2020/osa2/maatiedot/src/index.js":"1","/Users/arttupennanen/Desktop/projects/fullstackopen2020/osa2/maatiedot/src/App.js":"2"},{"size":193,"mtime":1610624821331,"results":"3","hashOfConfig":"4"},{"size":3672,"mtime":1610631509247,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"rwo24b",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/Users/arttupennanen/Desktop/projects/fullstackopen2020/osa2/maatiedot/src/index.js",[],["12","13"],"/Users/arttupennanen/Desktop/projects/fullstackopen2020/osa2/maatiedot/src/App.js",["14"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst COUNTRIES_API_URL = 'https://restcountries.eu/rest/v2'\nconst WEATHER_API_URL = 'http://api.weatherstack.com/'\nconst WEATHER_API_KEY = process.env.REACT_APP_API_KEY\n// weatherstack api hakee sään Helsingille\n\nconst Input = ({ text, value, handleChange, type }) => {\n  return (\n    <div>\n      <label>\n        <span>{text}:</span>\n        <input type={type} value={value} onChange={handleChange} />\n      </label>\n    </div>\n  )\n}\n\nconst Form = ({ inputs, handleSubmit, submitText }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      {inputs.map((input, i) => (\n        <Input key={i} type={input.type} text={input.text} value={input.value} handleChange={input.handleChange} />\n      ))}\n      {handleSubmit && <button type=\"submit\">{submitText}</button>}\n    </form>\n  )\n}\n\nconst Weather = ({ weather }) => {\n  const { current, location } = weather\n  return (\n    <div>\n      <h3>Weather in {location.name}</h3>\n      <p>Temperature: {current.temperature}°C</p>\n      {current.weather_icons.map((icon, i) => (\n        <img alt=\"weather-icon\" src={icon} key={i} height=\"50\" />\n      ))}\n      <p>\n        Wind: {current.wind_speed}mph direction {current.wind_dir}\n      </p>\n    </div>\n  )\n}\n\nconst Country = ({ country }) => {\n  return (\n    <div>\n      <h2>{country.name}</h2>\n      <img alt={`Flag of ${country.name}`} src={country.flag} height=\"70\" />\n      <p>capital {country.capital}</p>\n      <p>population {country.population}</p>\n      <h3>Official languages</h3>\n      <ul>\n        {country.languages.map((lang) => (\n          <li key={lang.name}>{lang.name}</li>\n        ))}\n      </ul>\n      {country.weather && <Weather weather={country.weather} />}\n    </div>\n  )\n}\n\nconst CountryName = ({ name, handleSubmit }) => {\n  return (\n    <p>\n      {name}\n      <button onClick={() => handleSubmit(name)}>show</button>\n    </p>\n  )\n}\n\nconst Countries = ({ countries, showFuction }) => {\n  let output\n  if (countries.length > 100) {\n    output = <p>Too many matches, specify more elaborate filter.</p>\n  } else if (countries.length === 1) {\n    output = <Country country={countries[0]} />\n  } else {\n    output = countries.map((country) => (\n      <CountryName handleSubmit={showFuction} name={country.name} key={country.name} />\n    ))\n  }\n\n  return output\n}\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [filter, setFilter] = useState('')\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handleShowClick = (name) => {\n    setFilter(name)\n  }\n\n  const filteredCountries = countries.filter((country) => country.name.toLowerCase().includes(filter.toLowerCase()))\n\n  useEffect(async () => {\n    axios.get(`${COUNTRIES_API_URL}/all`).then((res) => {\n      console.log('promise resovled')\n      setCountries(res.data)\n    })\n  }, [])\n\n  useEffect(() => {\n    let finlandIndex\n    countries.forEach((country, i) => {\n      if (country.name === 'Finland') {\n        return (finlandIndex = i)\n      }\n    })\n    if (!finlandIndex) return\n    if (countries[finlandIndex].weather) return\n    if (!WEATHER_API_KEY) return\n    let _countries = [...countries]\n    axios.get(`${WEATHER_API_URL}/current?access_key=${WEATHER_API_KEY}&query=Helsinki`).then((res) => {\n      _countries[finlandIndex].weather = res.data\n      setCountries(_countries)\n    })\n  }, [countries])\n\n  return (\n    <div>\n      <Form inputs={[{ text: 'find countries', value: filter, handleChange: handleFilterChange }]} />\n      <Countries countries={filteredCountries} showFuction={handleShowClick} />\n    </div>\n  )\n}\n\nexport default App\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":103,"column":13,"nodeType":"21","endLine":108,"endColumn":4},"no-native-reassign",["22"],"no-negated-in-lhs",["23"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]